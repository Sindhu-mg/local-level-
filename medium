01.lowest common ancestor
class TreeNode:
    def __init__(self, val=0, left=None, right=None):
        self.val = val
        self.left = left
        self.right = right

def LowestCommonAncestor(root, p, q):
    if not root:
        return None
    if p.val < root.val and q.val < root.val:
        return LowestCommonAncestor(root.left, p, q)
    elif p.val > root.val and q.val > root.val:
        return LowestCommonAncestor(root.right, p, q)
    else:
        return root
root = TreeNode(6)
root.left = TreeNode(2)
root.right = TreeNode(8)
root.left.left = TreeNode(0)
root.left.right = TreeNode(4)
root.right.left = TreeNode(7)
root.right.right = TreeNode(9)
root.left.right.left = TreeNode(3)
root.left.right.right = TreeNode(5)

p = root.left
q = root.right
lca = LowestCommonAncestor(root, p, q)

print(f"Input: root = [6,2,8,0,4,7,9,null,null,3,5], p = {p.val}, q = {q.val}")
print(f"Output: {lca.val}")



