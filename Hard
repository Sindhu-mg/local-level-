01.Qn Answer
from collections import deque

def maxSlidingWindow(nums, k):
    result = []
    deque = deque()

    for i, num in enumerate(nums):
        while deque and deque[0] < i - k + 1:
            deque.popleft()
        while deque and nums[deque[-1]] < num:
            deque.pop()
        deque.append(i)
        if i >= k - 1:
            result.append(nums[deque[0]])

    return result
nums1 = [1]
k1 = 1
result1 = maxSlidingWindow(nums1, k1)
print(f"Input: nums = {nums1}, k = {k1}\nOutput: {result1}")

nums2 = [1, 3, -1, -3, 5, 3, 6, 7]
k2 = 3
result2 = maxSlidingWindow(nums2, k2)
print(f"\nInput: nums = {nums2}, k = {k2}\nOutput: {result2}")

Input: nums = [1], k = 1
Output: [1]
Input: nums = [1,3,-1,-3,5,3,6,7], k = 3
Output: [3, 3, 5, 5, 6, 7]

02.QnAnswer
  def shortestPalindrome(s):
    rev = s + s[::-1]
    n = len(rev)
    lps = [0] * n

    i, j = 1, 0
    while i < n:
        if rev[i] == rev[j]:
            j += 1
            lps[i] = j
            i += 1
        else:
            if j != 0:
                j = lps[j - 1]
            else:
                lps[i] = 0
                i += 1

    prefix_len = len(s) - lps[n - 1]
    result = s[-prefix_len:][::-1] + s
    return result
s1 = "aacecaaa"
result1 = shortestPalindrome(s1)
print(f"Input: s = \"{s1}\"\nOutput: \"{result1}\"")

s2 = "abcd"
result2 = shortestPalindrome(s2)
print(f"\nInput: s = \"{s2}\"\nOutput: \"{result2}\"")

Input: s = "aacecaaa"
Output: "aaacecaaa"

Input: s = "abcd"
Output: "dcbabcd"

Q03.
  def count_digit_one(n):
    count = 0
    factor = 1  
     while n // factor > 0:
        cur_digit = (n // factor) % 10
        high_digits = n // (factor * 10)
        low_digits = n % factor

        if cur_digit == 0:
            count += high_digits * factor
        elif cur_digit == 1:
            count += high_digits * factor + low_digits + 1
        else:
            count += (high_digits + 1) * factor

        factor *= 10
     return count
n1 = 13
result1 = count_digit_one(n1)
print(f"Input: n = {n1}\nOutput: {result1}")
n2 = 0
result2 = count_digit_one(n2)
print(f"\nInput: n = {n2}\nOutput: {result2}")

Input: n = 13
Output: 6

Input: n = 0
Output: 0
 
